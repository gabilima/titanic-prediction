apiVersion: apps/v1
kind: Deployment
metadata:
  name: titanic-prediction
  labels:
    app: titanic-prediction
spec:
  replicas: 3
  selector:
    matchLabels:
      app: titanic-prediction
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: titanic-prediction
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8000"
    spec:
      containers:
      - name: titanic-prediction
        image: ${DOCKER_REGISTRY}/titanic-prediction:${IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: titanic-prediction-config
              key: ENVIRONMENT
        - name: MODEL_PATH
          valueFrom:
            configMapKeyRef:
              name: titanic-prediction-config
              key: MODEL_PATH
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: titanic-prediction-config
              key: LOG_LEVEL
        - name: MLFLOW_TRACKING_URI
          valueFrom:
            configMapKeyRef:
              name: titanic-prediction-config
              key: MLFLOW_TRACKING_URI
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: titanic-prediction-secrets
              key: DB_PASSWORD
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: model-volume
          mountPath: /app/models
      volumes:
      - name: model-volume
        emptyDir: {}

