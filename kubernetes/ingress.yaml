apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: titanic-prediction-ingress
  namespace: default
  annotations:
    # Nginx ingress controller annotations
    kubernetes.io/ingress.class: "nginx"
    
    # TLS and HTTPS configuration
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "false"
    
    # Security headers
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/limit-connections: "100"
    nginx.ingress.kubernetes.io/limit-rps: "50"
    nginx.ingress.kubernetes.io/limit-rpm: "1000"
    nginx.ingress.kubernetes.io/limit-rate: "1m"
    nginx.ingress.kubernetes.io/limit-rate-after: "10m"
    
    # CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://your-app-domain.com"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    
    # Backend protocol and load balancing
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
    
spec:
  tls:
  - hosts:
    - titanic-prediction-api.example.com
    secretName: titanic-prediction-tls-secret
  
  rules:
  - host: titanic-prediction-api.example.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: titanic-prediction-service
            port:
              number: 80
      
      - path: /api/v1/predict
        pathType: Prefix
        backend:
          service:
            name: titanic-prediction-service
            port:
              number: 80
      
      - path: /docs
        pathType: Prefix
        backend:
          service:
            name: titanic-prediction-service
            port:
              number: 80
      
      - path: /metrics
        pathType: Exact
        backend:
          service:
            name: titanic-prediction-service
            port:
              number: 80
      
      - path: /health
        pathType: Exact
        backend:
          service:
            name: titanic-prediction-service
            port:
              number: 80

