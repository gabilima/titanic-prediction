{
  "features": {
    "PassengerId": {
      "type": "integer",
      "nullable": false,
      "min_value": 1,
      "max_value": null,
      "unique": true,
      "description": "Unique identifier for each passenger"
    },
    "Survived": {
      "type": "integer",
      "nullable": false,
      "min_value": 0,
      "max_value": 1,
      "categories": [0, 1],
      "description": "Survival status (0 = No, 1 = Yes)"
    },
    "Pclass": {
      "type": "integer",
      "nullable": false,
      "min_value": 1,
      "max_value": 3,
      "categories": [1, 2, 3],
      "description": "Passenger class (1 = 1st, 2 = 2nd, 3 = 3rd)"
    },
    "Name": {
      "type": "string",
      "nullable": false,
      "min_length": 2,
      "max_length": 100,
      "description": "Passenger name"
    },
    "Sex": {
      "type": "string",
      "nullable": false,
      "categories": ["male", "female"],
      "description": "Gender of passenger"
    },
    "Age": {
      "type": "float",
      "nullable": true,
      "min_value": 0,
      "max_value": 120,
      "description": "Age in years"
    },
    "SibSp": {
      "type": "integer",
      "nullable": false,
      "min_value": 0,
      "max_value": 10,
      "description": "Number of siblings/spouses aboard"
    },
    "Parch": {
      "type": "integer",
      "nullable": false,
      "min_value": 0,
      "max_value": 10,
      "description": "Number of parents/children aboard"
    },
    "Ticket": {
      "type": "string",
      "nullable": false,
      "description": "Ticket number"
    },
    "Fare": {
      "type": "float",
      "nullable": true,
      "min_value": 0,
      "max_value": 600,
      "description": "Passenger fare"
    },
    "Cabin": {
      "type": "string",
      "nullable": true,
      "pattern": "^[A-Z][0-9]+$",
      "description": "Cabin number"
    },
    "Embarked": {
      "type": "string",
      "nullable": true,
      "categories": ["C", "Q", "S"],
      "description": "Port of embarkation (C = Cherbourg, Q = Queenstown, S = Southampton)"
    }
  },
  "derived_features": {
    "FamilySize": {
      "type": "integer",
      "nullable": false,
      "min_value": 1,
      "max_value": 11,
      "description": "Total number of family members (SibSp + Parch + 1)"
    },
    "IsAlone": {
      "type": "integer",
      "nullable": false,
      "categories": [0, 1],
      "description": "Passenger traveling alone flag (0 = No, 1 = Yes)"
    },
    "Title": {
      "type": "string",
      "nullable": false,
      "categories": ["Mr", "Mrs", "Miss", "Master", "Rare"],
      "description": "Title extracted from name"
    },
    "AgeBand": {
      "type": "string",
      "nullable": false,
      "categories": ["Child", "Teen", "Adult", "Senior"],
      "description": "Age group category"
    },
    "FareBand": {
      "type": "string",
      "nullable": false,
      "categories": ["Low", "Medium", "High", "Very High"],
      "description": "Fare category"
    }
  },
  "cross_feature_validations": [
    {
      "name": "family_size_validation",
      "expression": "FamilySize == SibSp + Parch + 1",
      "description": "Validate that FamilySize equals SibSp + Parch + 1"
    },
    {
      "name": "is_alone_validation",
      "expression": "(SibSp + Parch == 0 AND IsAlone == 1) OR (SibSp + Parch > 0 AND IsAlone == 0)",
      "description": "Validate that IsAlone is consistent with SibSp and Parch values"
    },
    {
      "name": "child_validation",
      "expression": "(Age < 12 AND AgeBand == 'Child') OR (Age >= 12 AND AgeBand != 'Child')",
      "description": "Validate that children under 12 are categorized as 'Child'"
    },
    {
      "name": "pclass_fare_correlation",
      "expression": "(Pclass == 1 AND Fare > 30) OR (Pclass == 3 AND Fare < 50)",
      "description": "General correlation between Pclass and Fare (with exceptions allowed)"
    }
  ],
  "monitoring": {
    "drift_detection": {
      "features": ["Age", "Fare", "Pclass", "Sex", "Embarked"],
      "threshold": 0.05,
      "method": "ks_test",
      "window_size": 1000
    },
    "performance_metrics": ["accuracy", "precision", "recall", "f1_score", "roc_auc"],
    "alerting": {
      "accuracy_threshold": 0.75,
      "drift_severity_threshold": 0.1,
      "missing_values_threshold": 0.05
    }
  },
  "data_quality_checks": {
    "row_count": {
      "min_value": 100,
      "max_value": null
    },
    "completeness": {
      "threshold": 0.95,
      "critical_features": ["Pclass", "Sex", "Fare"]
    },
    "freshness": {
      "max_age_days": 30
    }
  }
}

